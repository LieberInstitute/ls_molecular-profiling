
R version 4.3.1 Patched (2023-07-19 r84711) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-conda-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(SingleCellExperiment)
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind,
    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,
    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,
    table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

> library(sessioninfo)
> library(scater)
Loading required package: scuttle
Loading required package: ggplot2
> library(scran)
> library(here)
here() starts at /dcs04/lieber/marmaypag/ls_molecular-profiling_LIBD1070/ls_molecular-profiling
> 
> 
> load(here("processed-data","human_mouse_matched_by_JAX.rda"),verbose = TRUE)
Loading objects:
  sce_mouse_sub
  sce_human_sub
> 
> #Randomly sample 18.3% of the human LS dataset, 500x
> size_m <- round(.0841*ncol(sce_mouse_sub))
> 
> #Make a dataframe to output the t-statistics into
> out_m_dataframe <- as.data.frame(matrix(nrow = nrow(sce_mouse_sub),ncol = 500))
> rownames(out_m_dataframe) <- rownames(sce_mouse_sub)
> colnames(out_m_dataframe) <- 1:500
> 
> #Randomly sample the cells 500x
> set.seed(150001110)
> random_cells <- replicate(500,sample(x = 1:9225,size = size_m,replace = FALSE))
> random_cellnames <- as.data.frame(matrix(nrow = nrow(random_cells),ncol = 500))
> colnames(random_cellnames) <- 1:500
> colData(sce_mouse_sub)$unique_rowname <- rownames(colData(sce_mouse_sub))
> for(i in 1:500){
+     random_cellnames[,i] <- colData(sce_mouse_sub)$unique_rowname[random_cells[,i]]
+ }
> 
> #Calculate the t-statistics
> for(i in 1:500){
+     #Set cell names
+     sce_mouse_sub$random_designation <- ifelse(colData(sce_mouse_sub)$unique_rowname %in% random_cellnames[,i],
+                                                "random",
+                                                "other")
+     
+     #DEG testing to get std.logFC 
+     pd <- as.data.frame(SummarizedExperiment::colData(sce_mouse_sub))
+     mod <- with(pd, stats::model.matrix(as.formula("~Sample")))
+     mod <- mod[, -1, drop = F]
+     DEGs <- scran::findMarkers(sce_mouse_sub,
+                                groups = sce_mouse_sub$random_designation,
+                                assay.type = "logcounts", 
+                                design = mod, 
+                                test.type = "t",
+                                log.p = TRUE,
+                                std.lfc = TRUE,
+                                direction = "up", 
+                                pval.type = "all", 
+                                full.stats = T)
+     
+     #Pull stats for random cells
+     DEGs <- DEGs[["random"]]
+     
+     #Calculate t-statistic
+     DEGs$std.logFC <- DEGs$summary.stats 
+     DEGs$t.stat <-  DEGs$std.logFC * sqrt(ncol(sce_mouse_sub))
+     
+     #Input the t-statistic into the dataframe
+     out_m_dataframe[,i] <- DEGs[rownames(out_m_dataframe),"t.stat"]
+     print(i)
+ }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
[1] 11
[1] 12
[1] 13
[1] 14
[1] 15
[1] 16
[1] 17
[1] 18
[1] 19
[1] 20
[1] 21
[1] 22
[1] 23
[1] 24
[1] 25
[1] 26
[1] 27
[1] 28
[1] 29
[1] 30
[1] 31
[1] 32
[1] 33
[1] 34
[1] 35
[1] 36
[1] 37
[1] 38
[1] 39
[1] 40
[1] 41
[1] 42
[1] 43
[1] 44
[1] 45
[1] 46
[1] 47
[1] 48
[1] 49
[1] 50
[1] 51
[1] 52
[1] 53
[1] 54
[1] 55
[1] 56
[1] 57
[1] 58
[1] 59
[1] 60
[1] 61
[1] 62
[1] 63
[1] 64
[1] 65
[1] 66
[1] 67
[1] 68
[1] 69
[1] 70
[1] 71
[1] 72
[1] 73
[1] 74
[1] 75
[1] 76
[1] 77
[1] 78
[1] 79
[1] 80
[1] 81
[1] 82
[1] 83
[1] 84
[1] 85
[1] 86
[1] 87
[1] 88
[1] 89
[1] 90
[1] 91
[1] 92
[1] 93
[1] 94
[1] 95
[1] 96
[1] 97
[1] 98
[1] 99
[1] 100
[1] 101
[1] 102
[1] 103
[1] 104
[1] 105
[1] 106
[1] 107
[1] 108
[1] 109
[1] 110
[1] 111
[1] 112
[1] 113
[1] 114
[1] 115
[1] 116
[1] 117
[1] 118
[1] 119
[1] 120
[1] 121
[1] 122
[1] 123
[1] 124
[1] 125
[1] 126
[1] 127
[1] 128
[1] 129
[1] 130
[1] 131
[1] 132
[1] 133
[1] 134
[1] 135
[1] 136
[1] 137
[1] 138
[1] 139
[1] 140
[1] 141
[1] 142
[1] 143
[1] 144
[1] 145
[1] 146
[1] 147
[1] 148
[1] 149
[1] 150
[1] 151
[1] 152
[1] 153
[1] 154
[1] 155
[1] 156
[1] 157
[1] 158
[1] 159
[1] 160
[1] 161
[1] 162
[1] 163
[1] 164
[1] 165
[1] 166
[1] 167
[1] 168
[1] 169
[1] 170
[1] 171
[1] 172
[1] 173
[1] 174
[1] 175
[1] 176
[1] 177
[1] 178
[1] 179
[1] 180
[1] 181
[1] 182
[1] 183
[1] 184
[1] 185
[1] 186
[1] 187
[1] 188
[1] 189
[1] 190
[1] 191
[1] 192
[1] 193
[1] 194
[1] 195
[1] 196
[1] 197
[1] 198
[1] 199
[1] 200
[1] 201
[1] 202
[1] 203
[1] 204
[1] 205
[1] 206
[1] 207
[1] 208
[1] 209
[1] 210
[1] 211
[1] 212
[1] 213
[1] 214
[1] 215
[1] 216
[1] 217
[1] 218
[1] 219
[1] 220
[1] 221
[1] 222
[1] 223
[1] 224
[1] 225
[1] 226
[1] 227
[1] 228
[1] 229
[1] 230
[1] 231
[1] 232
[1] 233
[1] 234
[1] 235
[1] 236
[1] 237
[1] 238
[1] 239
[1] 240
[1] 241
[1] 242
[1] 243
[1] 244
[1] 245
[1] 246
[1] 247
[1] 248
[1] 249
[1] 250
[1] 251
[1] 252
[1] 253
[1] 254
[1] 255
[1] 256
[1] 257
[1] 258
[1] 259
[1] 260
[1] 261
[1] 262
[1] 263
[1] 264
[1] 265
[1] 266
[1] 267
[1] 268
[1] 269
[1] 270
[1] 271
[1] 272
[1] 273
[1] 274
[1] 275
[1] 276
[1] 277
[1] 278
[1] 279
[1] 280
[1] 281
[1] 282
[1] 283
[1] 284
[1] 285
[1] 286
[1] 287
[1] 288
[1] 289
[1] 290
[1] 291
[1] 292
[1] 293
[1] 294
[1] 295
[1] 296
[1] 297
[1] 298
[1] 299
[1] 300
[1] 301
[1] 302
[1] 303
[1] 304
[1] 305
[1] 306
[1] 307
[1] 308
[1] 309
[1] 310
[1] 311
[1] 312
[1] 313
[1] 314
[1] 315
[1] 316
[1] 317
[1] 318
[1] 319
[1] 320
[1] 321
[1] 322
[1] 323
[1] 324
[1] 325
[1] 326
[1] 327
[1] 328
[1] 329
[1] 330
[1] 331
[1] 332
[1] 333
[1] 334
[1] 335
[1] 336
[1] 337
[1] 338
[1] 339
[1] 340
[1] 341
[1] 342
[1] 343
[1] 344
[1] 345
[1] 346
[1] 347
[1] 348
[1] 349
[1] 350
[1] 351
[1] 352
[1] 353
[1] 354
[1] 355
[1] 356
[1] 357
[1] 358
[1] 359
[1] 360
[1] 361
[1] 362
[1] 363
[1] 364
[1] 365
[1] 366
[1] 367
[1] 368
[1] 369
[1] 370
[1] 371
[1] 372
[1] 373
[1] 374
[1] 375
[1] 376
[1] 377
[1] 378
[1] 379
[1] 380
[1] 381
[1] 382
[1] 383
[1] 384
[1] 385
[1] 386
[1] 387
[1] 388
[1] 389
[1] 390
[1] 391
[1] 392
[1] 393
[1] 394
[1] 395
[1] 396
[1] 397
[1] 398
[1] 399
[1] 400
[1] 401
[1] 402
[1] 403
[1] 404
[1] 405
[1] 406
[1] 407
[1] 408
[1] 409
[1] 410
[1] 411
[1] 412
[1] 413
[1] 414
[1] 415
[1] 416
[1] 417
[1] 418
[1] 419
[1] 420
[1] 421
[1] 422
[1] 423
[1] 424
[1] 425
[1] 426
[1] 427
[1] 428
[1] 429
[1] 430
[1] 431
[1] 432
[1] 433
[1] 434
[1] 435
[1] 436
[1] 437
[1] 438
[1] 439
[1] 440
[1] 441
[1] 442
[1] 443
[1] 444
[1] 445
[1] 446
[1] 447
[1] 448
[1] 449
[1] 450
[1] 451
[1] 452
[1] 453
[1] 454
[1] 455
[1] 456
[1] 457
[1] 458
[1] 459
[1] 460
[1] 461
[1] 462
[1] 463
[1] 464
[1] 465
[1] 466
[1] 467
[1] 468
[1] 469
[1] 470
[1] 471
[1] 472
[1] 473
[1] 474
[1] 475
[1] 476
[1] 477
[1] 478
[1] 479
[1] 480
[1] 481
[1] 482
[1] 483
[1] 484
[1] 485
[1] 486
[1] 487
[1] 488
[1] 489
[1] 490
[1] 491
[1] 492
[1] 493
[1] 494
[1] 495
[1] 496
[1] 497
[1] 498
[1] 499
[1] 500
> 
> 
> save(out_m_dataframe,file = here("processed-data","randomized_t_stats_mouse_500.rda"))
> 
> print("Reproducibility information:")
[1] "Reproducibility information:"
> Sys.time()
[1] "2024-01-25 13:47:01 EST"
> proc.time()
     user    system   elapsed 
17252.334   334.509 17921.718 
> options(width = 120)
> session_info()
─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.3.1 Patched (2023-07-19 r84711)
 os       Rocky Linux 9.2 (Blue Onyx)
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       US/Eastern
 date     2024-01-25
 pandoc   3.1.3 @ /jhpce/shared/community/core/conda_R/4.3/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────
 package              * version   date (UTC) lib source
 abind                  1.4-5     2016-07-21 [2] CRAN (R 4.3.1)
 beachmat               2.16.0    2023-04-25 [2] Bioconductor
 beeswarm               0.4.0     2021-06-01 [2] CRAN (R 4.3.1)
 Biobase              * 2.60.0    2023-04-25 [2] Bioconductor
 BiocGenerics         * 0.46.0    2023-04-25 [2] Bioconductor
 BiocNeighbors          1.18.0    2023-04-25 [2] Bioconductor
 BiocParallel           1.34.2    2023-05-22 [2] Bioconductor
 BiocSingular           1.16.0    2023-04-25 [2] Bioconductor
 bitops                 1.0-7     2021-04-24 [2] CRAN (R 4.3.1)
 bluster                1.10.0    2023-04-25 [2] Bioconductor
 cli                    3.6.1     2023-03-23 [2] CRAN (R 4.3.1)
 cluster                2.1.4     2022-08-22 [3] CRAN (R 4.3.1)
 codetools              0.2-19    2023-02-01 [3] CRAN (R 4.3.1)
 colorspace             2.1-0     2023-01-23 [2] CRAN (R 4.3.1)
 crayon                 1.5.2     2022-09-29 [2] CRAN (R 4.3.1)
 DelayedArray           0.26.7    2023-07-28 [2] Bioconductor
 DelayedMatrixStats     1.22.6    2023-08-28 [2] Bioconductor
 dplyr                  1.1.3     2023-09-03 [2] CRAN (R 4.3.1)
 dqrng                  0.3.1     2023-08-30 [2] CRAN (R 4.3.1)
 edgeR                  3.42.4    2023-05-31 [2] Bioconductor
 fansi                  1.0.4     2023-01-22 [2] CRAN (R 4.3.1)
 generics               0.1.3     2022-07-05 [2] CRAN (R 4.3.1)
 GenomeInfoDb         * 1.36.3    2023-09-07 [2] Bioconductor
 GenomeInfoDbData       1.2.10    2023-07-20 [2] Bioconductor
 GenomicRanges        * 1.52.0    2023-04-25 [2] Bioconductor
 ggbeeswarm             0.7.2     2023-04-29 [2] CRAN (R 4.3.1)
 ggplot2              * 3.4.3     2023-08-14 [2] CRAN (R 4.3.1)
 ggrepel                0.9.3     2023-02-03 [2] CRAN (R 4.3.1)
 glue                   1.6.2     2022-02-24 [2] CRAN (R 4.3.1)
 gridExtra              2.3       2017-09-09 [2] CRAN (R 4.3.1)
 gtable                 0.3.4     2023-08-21 [2] CRAN (R 4.3.1)
 here                 * 1.0.1     2020-12-13 [2] CRAN (R 4.3.1)
 igraph                 1.5.1     2023-08-10 [2] CRAN (R 4.3.1)
 IRanges              * 2.34.1    2023-06-22 [2] Bioconductor
 irlba                  2.3.5.1   2022-10-03 [2] CRAN (R 4.3.1)
 lattice                0.21-8    2023-04-05 [3] CRAN (R 4.3.1)
 lifecycle              1.0.3     2022-10-07 [2] CRAN (R 4.3.1)
 limma                  3.56.2    2023-06-04 [2] Bioconductor
 locfit                 1.5-9.8   2023-06-11 [2] CRAN (R 4.3.1)
 magrittr               2.0.3     2022-03-30 [2] CRAN (R 4.3.1)
 Matrix                 1.6-1.1   2023-09-18 [3] CRAN (R 4.3.1)
 MatrixGenerics       * 1.12.3    2023-07-30 [2] Bioconductor
 matrixStats          * 1.0.0     2023-06-02 [2] CRAN (R 4.3.1)
 metapod                1.8.0     2023-04-25 [2] Bioconductor
 munsell                0.5.0     2018-06-12 [2] CRAN (R 4.3.1)
 pillar                 1.9.0     2023-03-22 [2] CRAN (R 4.3.1)
 pkgconfig              2.0.3     2019-09-22 [2] CRAN (R 4.3.1)
 R6                     2.5.1     2021-08-19 [2] CRAN (R 4.3.1)
 Rcpp                   1.0.11    2023-07-06 [2] CRAN (R 4.3.1)
 RCurl                  1.98-1.12 2023-03-27 [2] CRAN (R 4.3.1)
 rlang                  1.1.1     2023-04-28 [2] CRAN (R 4.3.1)
 rprojroot              2.0.3     2022-04-02 [2] CRAN (R 4.3.1)
 rsvd                   1.0.5     2021-04-16 [2] CRAN (R 4.3.1)
 S4Arrays               1.0.6     2023-08-30 [2] Bioconductor
 S4Vectors            * 0.38.1    2023-05-02 [2] Bioconductor
 ScaledMatrix           1.8.1     2023-05-03 [2] Bioconductor
 scales                 1.2.1     2022-08-20 [2] CRAN (R 4.3.1)
 scater               * 1.28.0    2023-04-25 [2] Bioconductor
 scran                * 1.28.2    2023-07-23 [2] Bioconductor
 scuttle              * 1.10.2    2023-08-03 [2] Bioconductor
 sessioninfo          * 1.2.2     2021-12-06 [2] CRAN (R 4.3.1)
 SingleCellExperiment * 1.22.0    2023-04-25 [2] Bioconductor
 sparseMatrixStats      1.12.2    2023-07-02 [2] Bioconductor
 statmod                1.5.0     2023-01-06 [2] CRAN (R 4.3.1)
 SummarizedExperiment * 1.30.2    2023-06-06 [2] Bioconductor
 tibble                 3.2.1     2023-03-20 [2] CRAN (R 4.3.1)
 tidyselect             1.2.0     2022-10-10 [2] CRAN (R 4.3.1)
 utf8                   1.2.3     2023-01-31 [2] CRAN (R 4.3.1)
 vctrs                  0.6.3     2023-06-14 [2] CRAN (R 4.3.1)
 vipor                  0.4.5     2017-03-22 [2] CRAN (R 4.3.1)
 viridis                0.6.4     2023-07-22 [2] CRAN (R 4.3.1)
 viridisLite            0.4.2     2023-05-02 [2] CRAN (R 4.3.1)
 withr                  2.5.0     2022-03-03 [2] CRAN (R 4.3.1)
 XVector                0.40.0    2023-04-25 [2] Bioconductor
 zlibbioc               1.46.0    2023-04-25 [2] Bioconductor

 [1] /users/rphillip/R/4.3
 [2] /jhpce/shared/community/core/conda_R/4.3/R/lib64/R/site-library
 [3] /jhpce/shared/community/core/conda_R/4.3/R/lib64/R/library

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
> 
> proc.time()
     user    system   elapsed 
17252.627   334.708 17923.983 
